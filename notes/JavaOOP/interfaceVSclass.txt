Interfaces vs. Classes
An interface is similar to a class in the following ways:

An interface can contain any number of methods.
An interface is written in a file with a .java extension, with the name of the interface matching the name of the file.
The bytecode of an interface appears in a .class file.
Interfaces appear in packages, and their corresponding bytecode file must be in a directory structure that matches the package name.
However, an interface is different from a class in several ways, including:

You cannot instantiate an interface.
An interface does not contain any constructors.
The only fields that can appear in an interface must be both static and final, that is, constants that cannot change.
An interface is not extended by a class; it is implemented by a class.
An interface can extend multiple interfaces; a class can only extend from one class, but it can implement multiple interfaces.